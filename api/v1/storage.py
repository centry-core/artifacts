from hurry.filesize import size
from flask import request

from tools import MinioClient, MinioClientAdmin, api_tools, auth

CARRIER_MINIO_INTEGRATION_ID = 1


class AdminAPI(api_tools.APIModeHandler):
    @auth.decorators.check_api(["configuration.artifacts.artifacts.view"])
    def get(self, **kwargs):
        integration_id = request.args.get('integration_id')
        c = MinioClientAdmin(integration_id)
        buckets = c.list_bucket()
        bucket_types = {}
        total_size = 0
        for bucket in buckets:
            bucket_size = c.get_bucket_size(bucket)
            total_size += bucket_size
            response = c.get_bucket_tags(bucket)
            tags = {tag['Key']: tag['Value'] for tag in response['TagSet']} if response else {}
            if tags.get('type'):
                bucket_types[tags['type']] = bucket_types.get(tags['type'], 0) + bucket_size
        return {
            "total_bucket_size": {
                'readable': size(total_size),
                'bytes': total_size
                },
            "system_bucket_size": {
                'readable': size(bucket_types.get("system", 0)),
                'bytes': bucket_types.get("system", 0)
                },
            "autogenerated_bucket_size": {
                'readable': size(bucket_types.get("autogenerated", 0)),
                'bytes': bucket_types.get("autogenerated", 0)
                },
            "local_bucket_size": {
                'readable': size(bucket_types.get("local", 0)),
                'bytes': bucket_types.get("local", 0)
                },
            }, 200


class API(api_tools.APIBase):
    url_params = [
        '<string:project_id>',
        '<string:mode>/<string:project_id>',
    ]

    mode_handlers = {
        'administration': AdminAPI
    }
